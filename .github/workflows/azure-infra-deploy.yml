name: Deploy Azure Infrastructure
# Trigger workflow on pushes to the main branch targeting the infra path,
# or allow manual triggering from the Actions tab
on:
  push:
    branches: [ main ]
    paths:
      - 'infra/**' # Only run automatically if files in infra/ change
  workflow_dispatch: # Allows manual triggering anytime
# Permissions needed for runner environment
permissions:
  id-token: write # Potentially needed by Azure actions internally
  contents: read  # To checkout the code
jobs:
  deploy_infrastructure:
    name: Deploy Bicep Infrastructure
    runs-on: ubuntu-latest # Use a standard Linux runner environment
    steps:
    # Step 1: Check out the repository code so the workflow can access it
    - name: Checkout Code
      uses: actions/checkout@v4
    # Step 2: Log in to Azure using the Service Principal credentials via the 'creds' input
    - name: Login to Azure
      uses: azure/login@v1
      with:
        # Use the 'creds' input method, passing a JSON string with secrets:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
        # Keep false unless you specifically need PowerShell Az module later
        enable-AzPSSession: false
    # Step 3: Install Bicep CLI directly from Microsoft's instructions
    - name: Install Bicep CLI
      run: |
        # Make sure Azure CLI is updated
        az upgrade --yes
        
        # Install Bicep using the official Azure CLI command
        az bicep install
        
        # Create the expected directory if it doesn't exist
        mkdir -p /home/runner/.azure/bin
        
        # Check if bicep exists in another location and link it to where Azure expects it
        if [ -f "/usr/local/bin/bicep" ]; then
          echo "Found bicep in /usr/local/bin, linking to .azure/bin"
          ln -s /usr/local/bin/bicep /home/runner/.azure/bin/bicep
        fi
        
        # Make sure bicep is executable
        chmod +x /home/runner/.azure/bin/bicep 2>/dev/null || true
        
        # Verify Bicep installation and path
        which bicep || echo "Bicep not found in PATH"
        ls -la /home/runner/.azure/bin || echo "Directory doesn't exist"
        
        # Check Azure CLI can find Bicep
        az bicep version || echo "Azure CLI can't find Bicep"
    
    # Step 4: Deploy Bicep File directly with az CLI, avoiding GitHub Actions
    - name: Deploy Bicep File
      run: |
        # Export PATH to include .azure/bin
        export PATH=$PATH:/home/runner/.azure/bin
        
        # Execute deployment with explicit locations
        az deployment sub create \
          --location uksouth \
          --template-file ./infra/main.bicep \
          --parameters ./infra/main.bicepparam \
          --name deploy-smarteaid-infra-${{ github.run_number }}